# name: merge-files

# on:
#   workflow_run:
#     workflows: [ci-1-upload, ci-2-upload, ci-3-upload]
#     types:
#       - completed
#     branches:
#       - main

# jobs:
#   merge-files:
#     if: ${{ github.event.workflow_run.conclusion == 'success' }}
#     name: Download and merge files
#     runs-on: ubuntu-latest
#     steps:
#       - name: Wait for ci-1-upload, ci-2-upload, and ci-3-upload to complete
#         uses: lewagon/wait-on-check-action@v1.3.4
#         with:
#           ref: ${{ github.sha }}
#           check-name: |
#             Upload file 1 /.*
#             Upload file 2 /.*
#             Upload file 3 /.*
#           repo-token: ${{ secrets.GITHUB_TOKEN }}
#           wait-interval: 10
#           allowed-conclusions: success

#       - uses: actions/checkout@v3
#         with:
#           submodules: true

#       - name: list files
#         run: ls -l extracted/

#       - name: Download files from 1st workflow
#         uses: dawidd6/action-download-artifact@v6
#         with:
#           workflow: ci-1-upload.yml
#           name: test-file-1st-run.*
#           path: extracted/
#           name_is_regexp: true
#           search_artifacts: true

#       - name: Download files from 2nd workflow
#         uses: dawidd6/action-download-artifact@v6
#         with:
#           workflow: ci-2-upload.yml
#           name: test-file-2nd-run.*
#           path: extracted/
#           name_is_regexp: true
#           search_artifacts: true

#       - name: Download files from 3rd workflow
#         uses: dawidd6/action-download-artifact@v6
#         with:
#           workflow: ci-3-upload.yml
#           name: test-file-3rd-run.*
#           name_is_regexp: true
#           path: extracted/
#           search_artifacts: true

#       - name: list files after download
#         run: ls -l extracted/


name: merge-files

on:
  workflow_run:
    workflows: [ci-1-upload, ci-2-upload, ci-3-upload]
    types: [completed]
    branches: [main]

jobs:
  merge-files:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Download and merge files
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Check if all required workflows completed successfully
        id: check-workflows
        run: |
          required_workflows=("ci-1-upload" "ci-2-upload" "ci-3-upload")
          all_succeeded=true
          for workflow in "${required_workflows[@]}"; do
            conclusion=$(gh run list --workflow=$workflow --branch=main --json conclusion -q '.[0].conclusion')
            if [[ "$conclusion" != "success" ]]; then
              all_succeeded=false
              echo "Workflow $workflow did not complete successfully. Exiting."
              break
            fi
          done
          echo "all_succeeded=$all_succeeded" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Continue only if all workflows succeeded
        if: ${{ env.all_succeeded == 'true' }}
        run: echo "All workflows completed successfully. Proceeding with file merge."

      - name: list files
        run: ls -l extracted/

      - name: Download files from 1st workflow
        if: ${{ env.all_succeeded == 'true' }}
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: ci-1-upload.yml
          name: test-file-1st-run.*
          path: extracted/
          name_is_regexp: true
          search_artifacts: true

      - name: Download files from 2nd workflow
        if: ${{ env.all_succeeded == 'true' }}
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: ci-2-upload.yml
          name: test-file-2nd-run.*
          path: extracted/
          name_is_regexp: true
          search_artifacts: true

      - name: Download files from 3rd workflow
        if: ${{ env.all_succeeded == 'true' }}
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: ci-3-upload.yml
          name: test-file-3rd-run.*
          name_is_regexp: true
          path: extracted/
          search_artifacts: true

      - name: list files after download
        if: ${{ env.all_succeeded == 'true' }}
        run: ls -l extracted/
